# nginx/default.conf
server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        # Intenta servir el archivo directamente
        try_files $uri $uri/ /index.html; 
        # Si tienes un SPA que usa rutas de historial (ej. React Router),
        # deberías apuntar a index.html para todas las rutas que no sean archivos.
        # En tu caso, con multiples HTML (crm.html, dashboard.html),
        # try_files $uri $uri/ =404; podría ser más apropiado si no es un SPA "single page" real.
        # Pero para /api/* necesitamos el proxy.

        # Habilitar sustitución de variables para el frontend
        # Asegúrate de que los archivos HTML se procesen para sustituciones
        # Si solo vas a sustituir en HTML, esto es suficiente.
        # Si crm.html no se considera un "SPA", el try_files de arriba podría fallar.
        # Vamos a asumir que quieres que /api/vaya a tu backend.
    }

    # Regla para pasar solicitudes /api/ al backend
    location /api/ {
        proxy_pass http://backend:4000/api/; # 'backend' es el nombre del servicio en docker-compose.yml
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /admin/ { # Si tus rutas de admin también son solo API, proxy_pass aquí
        proxy_pass http://backend:4000/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /contact { # Si tu ruta de contacto es solo API, proxy_pass aquí
        proxy_pass http://backend:4000/contact;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Opcional: Para variables de entorno en archivos HTML estáticos
    # Esto solo es necesario si estás usando $VARIABLE_DE_ENTORNO en tu HTML
    # Asegúrate de que el archivo HTML tiene la directiva 'envsubst' o similar si usas Nginx para esto.
    # Otra forma es usar un script en el Dockerfile para sustituir antes de servir.
    # Dada tu situación con multiples HTML, la forma más sencilla es un script en Dockerfile.
}